# Tests using the 'userdata0.parquet', a well-known parquet file.

statement ok
SET verify_optimized_plan TO true;

query TT
DESCRIBE read_parquet('../testdata/parquet/userdata0.parquet');
----
registration_dttm  Timestamp(ns)
id                 Int32
first_name         Utf8
last_name          Utf8
email              Utf8
gender             Utf8
ip_address         Utf8
cc                 Utf8
country            Utf8
birthdate          Utf8
salary             Float64
title              Utf8
comments           Utf8

query I
SELECT count(*) FROM read_parquet('../testdata/parquet/userdata0.parquet');
----
1000

# Ensure we can read with the namespaced function.
query I
SELECT count(*) FROM parquet.scan('../testdata/parquet/userdata0.parquet');
----
1000

query I
SELECT count(*) FROM parquet.read('../testdata/parquet/userdata0.parquet');
----
1000

query I
SELECT count(DISTINCT title) FROM read_parquet('../testdata/parquet/userdata0.parquet');
----
182

query I
SELECT count(*) FROM read_parquet('../testdata/parquet/userdata0.parquet') WHERE title = '';
----
197

# Min/max on timestamp
query ??
SELECT min(registration_dttm), max(registration_dttm) FROM read_parquet('../testdata/parquet/userdata0.parquet');
----
2016-02-03 00:01:00 UTC    2016-02-03 23:59:55 UTC

# Make sure we're properly reading null values
query I
SELECT count(*) FROM read_parquet('../testdata/parquet/userdata0.parquet') WHERE salary IS NULL;
----
68

