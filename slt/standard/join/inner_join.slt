statement ok
SET verify_optimized_plan TO true;

# Basic ON
query II rowsort
SELECT * FROM generate_series(1, 3) t1(a) INNER JOIN generate_series(1, 2) t2(b) ON a = b;
----
1  1
2  2

query II rowsort
SELECT * FROM generate_series(1, 3) t1(a) INNER JOIN generate_series(1, 2) t2(b) ON a <> b;
----
1  2
2  1
3  1
3  2

query II rowsort
SELECT * FROM generate_series(1, 3) t1(a) INNER JOIN generate_series(1, 2) t2(b) ON a = b;
----
1  1
2  2

# Ensure we're properly evaluating all conditions.
query II rowsort
SELECT * FROM generate_series(1, 3) t1(a) INNER JOIN generate_series(1, 2) t2(b) ON a = b AND a >= 2;
----
2  2

# Inner join with subquery
query II
SELECT * FROM generate_series(1, 3) t1(a)
  INNER JOIN (SELECT * FROM generate_series(1, 3) t2(b) WHERE b < 3)
    ON a = b AND a >= 2;
----
2  2

# Inner join with subquery and alias
query II
SELECT * FROM generate_series(1, 3) t1(a)
  INNER JOIN (SELECT * FROM generate_series(1, 3) t2(b) WHERE b < 3) t3
    ON t1.a = t3.b AND t1.a >= 2;
----
2  2

# Multiple inner joins
query III rowsort
SELECT * FROM generate_series(1, 3) t1(a)
   INNER JOIN generate_series(1, 3) t2(b) ON a = b
   INNER JOIN generate_series(1, 3) t3(c) ON b = c;
----
1  1  1
2  2  2
3  3  3

statement ok
CREATE TEMP TABLE t1 (id INT, val TEXT);

statement ok
CREATE TEMP TABLE t2 (id INT, val TEXT);

statement ok
INSERT INTO t1 VALUES (1, 'a'), (2, 'b'), (4, 'd');

statement ok
INSERT INTO t2 VALUES (1, 'eee'), (3, 'ggg'), (4, 'hhh');

query ITIT
SELECT t1.id, t1.val, t2.id, t2.val
  FROM t1 INNER JOIN t2
  ON t1.id = t2.id
  ORDER BY 1;
----
1  a  1  eee
4  d  4  hhh

# Projection reordered
query ITIT
SELECT t1.id, t2.val, t2.id, t1.val
  FROM t1 INNER JOIN t2
  ON t1.id = t2.id
  ORDER BY 1;
----
1  eee  1  a
4  hhh  4  d

