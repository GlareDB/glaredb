# regexp_count function

statement ok
SET verify_optimized_plan TO true;

query I
SELECT regexp_count('abacad', 'a|b');
----
4

query I
SELECT regexp_count('abacad', 'a');
----
3

query I
SELECT regexp_count('abacad', 'z');
----
0

query I
SELECT regexp_count('', 'a');
----
0

# Test with a complex regex pattern
# Note: PostgreSQL uses '\y' for word boundaries instead of '\b'
# The equivalent query in PostgreSQL would be: SELECT regexp_count('hello world hello', '\y\w+\y')
# GlareDB uses the Rust regex crate which supports '\b' for word boundaries
query I
SELECT regexp_count('hello world hello', '\b\w+\b');
----
3

# Test with a multi-character match
query I
SELECT regexp_count('abcabcabc', 'ab');
----
3

statement ok
CREATE TEMP TABLE t1 (id INT, val TEXT, regex TEXT)

statement ok
INSERT INTO t1 VALUES
  (1, 'dog cat dog', 'dog'),
  (2, 'dog cat dog', 'cat'),
  (3, 'dog cat dog', '.'),
  (4, NULL, 'dog'),
  (5, 'dog', NULL)

query II
SELECT id, regexp_count(val, regex) FROM t1 ORDER BY id;
----
1  2
2  1
3  11
4  NULL
5  NULL
