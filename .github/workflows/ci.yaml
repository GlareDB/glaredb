name: GlareDB CI

on: [push, workflow_dispatch]

jobs:
  test:
    name: CI
    runs-on: ubuntu-latest

    # Dependabot is set up with a dummy concurrency group secret ("dependabot")
    # which let's us queue up dependabot updates across multiple PRs.
    #
    # Why? Dependabot updates cargo.lock which results in a long compilation
    # time with nix. To avoid us having to sit through each one before
    # approving/squashing the next pr, we can just approve all at once and have
    # dependabot automatically squash and merge. If we approved multiple
    # dependabot PRs at once and didn't limit concurrency, PRs would constantly
    # have to rebase against "main" and go through the 30+ minute build multiple
    # times.
    #
    # Human PRs won't have the secret set, so each PR is its own group, and
    # every push to that pr will cancel an in progress CI run.
    concurrency:
      group: ci-${{ secrets.CONCURRENCY_GROUP || github.ref }}
      cancel-in-progress: ${{ !contains(secrets.CONCURRENCY_GROUP, "dependabot") }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            access-tokens = github=${{ github.token }}

      - name: configure cachix
        uses: cachix/cachix-action@v11
        with:
          name: glaredb-ci
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: run checks
        run: nix flake check -L

      - name: SQL Logic Tests
        run: nix run .#slt_runner testdata/sqllogictests/*.slt
