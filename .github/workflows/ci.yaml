name: CI

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

concurrency:
  group: build-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Format
        run: |
          rustup toolchain install nightly
          rustup component add rustfmt --toolchain nightly
          cargo +nightly fmt --check

      - name: Lint
        run: cargo clippy --all --all-features -- --deny warnings

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_KEY }}
          submodules: 'true'

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Unit tests
        run: cargo test -- --skip slt/

      - name: SQL Logic Tests (standard)
        if: always()
        run: ./scripts/run_slt_standard.sh

      - name: Extension - tpch_gen (SLT)
        if: always()
        run: cargo test slt/tpch_gen

      - name: Extension - csv (SLT)
        if: always()
        run: cargo test slt/csv

      - name: Extension - parquet (SLT)
        if: always()
        run: cargo test slt/parquet

      - name: File System - HTTP (SLT)
        if: always()
        run: cargo test slt/http

      - name: File System - S3 public (SLT)
        if: always()
        run: cargo test slt/s3/public

      - name: File System - S3 private (SLT)
        if: always()
        env:
          AWS_KEY: ${{ secrets.AWS_KEY }}
          AWS_SECRET: ${{ secrets.AWS_SECRET }}
        run: cargo test slt/s3/private

      # - name: SLTs Delta
      #   env:
      #     AWS_KEY: ${{ secrets.AWS_KEY }}
      #     AWS_SECRET: ${{ secrets.AWS_SECRET }}
      #   run: cargo test slt_datasource_delta

      # - name: SLTs Iceberg
      #   env:
      #     AWS_KEY: ${{ secrets.AWS_KEY }}
      #     AWS_SECRET: ${{ secrets.AWS_SECRET }}
      #   run: cargo test slt_datasource_iceberg

      # - name: SLTs TPC-H SF=0.1
      #   env:
      #     DEBUG_PRINT_EXPLAIN: 1
      #     DEBUG_PRINT_PROFILE: 1
      #   run: |
      #     cargo test slt/tpch

      # - name: SLTs TPC-DS SF=0.1
      #   env:
      #     DEBUG_PRINT_EXPLAIN: 1
      #     DEBUG_PRINT_PROFILE: 1
      #   run: |
      #     cargo test slt/tpcds/describe_files
      #     # cargo test slt/tpcds/q01
      #     # cargo test slt/tpcds/q02
      #     # cargo test slt/tpcds/q03
      #     # cargo test slt/tpcds/q04
      #     # cargo test slt/tpcds/q05
      #     # cargo test slt/tpcds/q06
      #     # cargo test slt/tpcds/q07
      #     # cargo test slt/tpcds/q08
      #     # cargo test slt/tpcds/q09
      #     # cargo test slt/tpcds/q10
      #     # cargo test slt/tpcds/q11
      #     # cargo test slt/tpcds/q12
      #     # cargo test slt/tpcds/q13
      #     # cargo test slt/tpcds/q14
      #     # cargo test slt/tpcds/q15
      #     # cargo test slt/tpcds/q16
      #     # cargo test slt/tpcds/q17
      #     # cargo test slt/tpcds/q18
      #     # cargo test slt/tpcds/q19
      #     # cargo test slt/tpcds/q20
      #     # cargo test slt/tpcds/q21
      #     # cargo test slt/tpcds/q22
      #     # cargo test slt/tpcds/q23
      #     # cargo test slt/tpcds/q24
      #     # cargo test slt/tpcds/q25
      #     # cargo test slt/tpcds/q26
      #     # cargo test slt/tpcds/q27
      #     # cargo test slt/tpcds/q28
      #     # cargo test slt/tpcds/q29
      #     # cargo test slt/tpcds/q30
      #     # cargo test slt/tpcds/q31
      #     # cargo test slt/tpcds/q32
      #     # cargo test slt/tpcds/q33
      #     # cargo test slt/tpcds/q34
      #     # cargo test slt/tpcds/q35
      #     # cargo test slt/tpcds/q36
      #     # cargo test slt/tpcds/q37
      #     # cargo test slt/tpcds/q38
      #     # cargo test slt/tpcds/q39
      #     # cargo test slt/tpcds/q40
      #     # cargo test slt/tpcds/q41
      #     # cargo test slt/tpcds/q42
      #     # cargo test slt/tpcds/q43
      #     # cargo test slt/tpcds/q44
      #     # cargo test slt/tpcds/q45
      #     # cargo test slt/tpcds/q46
      #     # cargo test slt/tpcds/q47
      #     # cargo test slt/tpcds/q48
      #     # cargo test slt/tpcds/q49
      #     # cargo test slt/tpcds/q50
      #     # cargo test slt/tpcds/q51
      #     # cargo test slt/tpcds/q52
      #     # cargo test slt/tpcds/q53
      #     # cargo test slt/tpcds/q54
      #     # cargo test slt/tpcds/q55
      #     # cargo test slt/tpcds/q56
      #     # cargo test slt/tpcds/q57
      #     # cargo test slt/tpcds/q58
      #     # cargo test slt/tpcds/q59
      #     # cargo test slt/tpcds/q60
      #     # cargo test slt/tpcds/q61
      #     # cargo test slt/tpcds/q62
      #     # cargo test slt/tpcds/q63
      #     # cargo test slt/tpcds/q64
      #     # cargo test slt/tpcds/q65
      #     # cargo test slt/tpcds/q66
      #     # cargo test slt/tpcds/q67
      #     # cargo test slt/tpcds/q68
      #     # cargo test slt/tpcds/q69
      #     # cargo test slt/tpcds/q70
      #     # cargo test slt/tpcds/q71
      #     # cargo test slt/tpcds/q72
      #     # cargo test slt/tpcds/q73
      #     # cargo test slt/tpcds/q74
      #     # cargo test slt/tpcds/q75
      #     # cargo test slt/tpcds/q76
      #     # cargo test slt/tpcds/q77
      #     # cargo test slt/tpcds/q78
      #     # cargo test slt/tpcds/q79
      #     # cargo test slt/tpcds/q80
      #     # cargo test slt/tpcds/q81
      #     # cargo test slt/tpcds/q82
      #     # cargo test slt/tpcds/q83
      #     # cargo test slt/tpcds/q84
      #     # cargo test slt/tpcds/q85
      #     # cargo test slt/tpcds/q86
      #     # cargo test slt/tpcds/q87
      #     # cargo test slt/tpcds/q88
      #     # cargo test slt/tpcds/q89
      #     # cargo test slt/tpcds/q90
      #     # cargo test slt/tpcds/q91
      #     # cargo test slt/tpcds/q92
      #     # cargo test slt/tpcds/q93
      #     # cargo test slt/tpcds/q94
      #     # cargo test slt/tpcds/q95
      #     # cargo test slt/tpcds/q96
      #     # cargo test slt/tpcds/q97
      #     # cargo test slt/tpcds/q98
      #     # cargo test slt/tpcds/q99

      # - name: SLTs Clickbench truncated
      #   run: |
      #     cargo test slt/clickbench

  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Tests
        run: ./scripts/ci_run_python_tests.sh

  miri:
    name: Run Miri
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Miri
        run: |
          rustup toolchain install nightly --component miri
          rustup override set nightly
          cargo miri setup

      - name: Run Miri
        run: ./scripts/run_miri.sh

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov -p glaredb_core --lcov --output-path lcov.info

  wasm:
    name: Build wasm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build wasm
        run: wasm-pack build crates/glaredb_wasm/ --scope glaredb
