name: GlareDB CI

on: [push, workflow_dispatch]

jobs:
  pre_test:
    continue-on-error: true
    runs-on: ubuntu-latest
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}

    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v4
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/docs/**"]'
          cancel_others: 'true'


  test:
    needs: pre_test
    if: ${{ needs.pre_test.outputs.should_skip != 'true' }}
    name: CI
    runs-on: ubuntu-latest-8-cores
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    env:
      GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
      GCP_PROJECT_ID: glaredb-artifacts

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v19
        with:
          extra_nix_config: |
            access-tokens = github=${{ github.token }}

      - name: configure cachix
        uses: cachix/cachix-action@v12
        continue-on-error: true
        with:
          name: glaredb-ci
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: run checks
        run: nix flake check -L

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1

      - name: Download testdata from GCS
        run: ./scripts/prepare-testdata.sh

      - name: SQL Logic Tests
        # Use globstar to ensure that all subdirectories are expanded.
        run: |
          shopt -s globstar
          nix run .#slt-runner -- -v embedded testdata/sqllogictests/**/*.slt

      - name: SQL Logic Tests (BigQuery)
        run: |
          shopt -s globstar
          if ./scripts/files-changed-in-branch.sh \
            "scripts/prepare-testdata.sh" \
            "scripts/create-test-bigquery-db.sh" \
            "testdata/sqllogictests_datasources_common/data" \
            "testdata/sqllogictests_bigquery/data"
          then
            export GCP_PROJECT_ID=glaredb-dev-playground
            export BIGQUERY_DATASET_ID=$(./scripts/create-test-bigquery-db.sh)
          else
            export BIGQUERY_DATASET_ID=glaredb_test
          fi
          nix run .#slt-runner -- -v embedded testdata/sqllogictests_bigquery/**/*.slt

      - name: SQL Logic Tests (Postgres)
        run: |
          shopt -s globstar
          export POSTGRES_CONN_STRING=$(./scripts/create-test-postgres-db.sh)
          nix run .#slt-runner -- -v embedded testdata/sqllogictests_postgres/**/*.slt

      - name: SQL Logic Tests (MySQL)
        run: |
          shopt -s globstar
          export MYSQL_CONN_STRING=$(./scripts/create-test-mysql-db.sh)
          nix run .#slt-runner -- -v embedded testdata/sqllogictests_mysql/**/*.slt

      - name: Protocol Tests
        run: ./scripts/protocol-test.sh
