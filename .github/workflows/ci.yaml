name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: build-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Format
        run: |
          rustup toolchain install nightly
          rustup component add rustfmt --toolchain nightly
          cargo +nightly fmt --check

      - name: Lint
        run: cargo clippy --all --all-features -- --deny warnings

  build:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_KEY }}
          submodules: 'true'

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Standard tests
        run: cargo test -- --skip slt_datasource_  --skip slt_tpch --skip slt_tpcds --skip slt_hybrid

      - name: SLTs Hybrid
        run: cargo test slt_hybrid

      - name: SLTs Parquet
        env:
          AWS_KEY: ${{ secrets.AWS_KEY }}
          AWS_SECRET: ${{ secrets.AWS_SECRET }}
        run: cargo test slt_datasource_parquet

      # - name: SLTs CSV
      #   env:
      #     AWS_KEY: ${{ secrets.AWS_KEY }}
      #     AWS_SECRET: ${{ secrets.AWS_SECRET }}
      #   run: cargo test slt_datasource_csv

      - name: SLTs Delta
        env:
          AWS_KEY: ${{ secrets.AWS_KEY }}
          AWS_SECRET: ${{ secrets.AWS_SECRET }}
        run: cargo test slt_datasource_delta

      - name: SLTs Iceberg
        env:
          AWS_KEY: ${{ secrets.AWS_KEY }}
          AWS_SECRET: ${{ secrets.AWS_SECRET }}
        run: cargo test slt_datasource_iceberg

      - name: SLTs Postgres
        run: |
          ./scripts/create-test-postgres-db.sh
          cargo test slt_datasource_postgres

      - name: SLTs TPC-H SF=0.1
        env:
          # TODO: Stack overflow during explain for q20
          # DEBUG_PRINT_EXPLAIN: 1 
          DEBUG_PRINT_PROFILE_DATA: 1
        run: |
          cargo test slt/tpch

      - name: SLTs TPC-DS SF=0.1
        env:
          DEBUG_PRINT_EXPLAIN: 1
          DEBUG_PRINT_PROFILE_DATA: 1
        run: |
          cargo test slt/tpch/describe_files
          # cargo test slt/tpch/q01
          # cargo test slt/tpch/q02
          # cargo test slt/tpch/q03
          # cargo test slt/tpch/q04
          # cargo test slt/tpch/q05
          # cargo test slt/tpch/q06
          # cargo test slt/tpch/q07
          # cargo test slt/tpch/q08
          # cargo test slt/tpch/q09
          # cargo test slt/tpch/q10
          # cargo test slt/tpch/q11
          # cargo test slt/tpch/q12
          # cargo test slt/tpch/q13
          # cargo test slt/tpch/q14
          # cargo test slt/tpch/q15
          # cargo test slt/tpch/q16
          # cargo test slt/tpch/q17
          # cargo test slt/tpch/q18
          # cargo test slt/tpch/q19
          # cargo test slt/tpch/q20
          # cargo test slt/tpch/q21
          # cargo test slt/tpch/q22
          # cargo test slt/tpch/q23
          # cargo test slt/tpch/q24
          # cargo test slt/tpch/q25
          # cargo test slt/tpch/q26
          # cargo test slt/tpch/q27

      - name: SLTs Clickbench truncated
        run: |
          cargo test slt/clickbench

  wasm:
    name: Build wasm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build wasm
        run: wasm-pack build crates/rayexec_wasm/ --scope glaredb
