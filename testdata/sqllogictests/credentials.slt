# Basic tests for credentials and datasources.

statement ok
CREATE CREDENTIALS debug_creds PROVIDER debug
	OPTIONS (table_type = 'never_ending');

statement error Duplicate name
CREATE CREDENTIALS debug_creds PROVIDER debug
	OPTIONS (table_type = 'never_ending');

query TT
SELECT credentials_name, provider
	FROM glare_catalog.credentials
	WHERE credentials_name = 'debug_creds';
----
debug_creds debug

# Incorrect credentials name should error

statement error does not exist
CREATE EXTERNAL TABLE debug_creds_table
  FROM debug
  CREDENTIALS debug_creds_abc;

# Try creating datasource using credentials

statement ok
CREATE EXTERNAL TABLE debug_creds_table
  FROM debug
  CREDENTIALS debug_creds;

query III
SELECT *
  FROM debug_creds_table
  LIMIT 1;
----
1 2 3

# Options to over-ride credentials.

statement ok
CREATE EXTERNAL TABLE debug_creds_table_opts
  FROM debug
  CREDENTIALS debug_creds
  OPTIONS (table_type = 'error_during_execution');

statement error
SELECT *
  FROM debug_creds_table_opts
  LIMIT 1;

# Check compatibility: datasource <-> credentials.
# Debug DBs don't support debug creds (since not required)

statement error not supported by datasource
CREATE EXTERNAL DATABASE debug_creds_db
	FROM debug
	CREDENTIALS debug_creds;

# Credentials also work with tunnels.

statement ok
CREATE TUNNEL debug_tunnel FROM debug;

statement ok
CREATE EXTERNAL TABLE debug_creds_tunnel_table
	FROM debug
	TUNNEL debug_tunnel
	CREDENTIALS debug_creds;

query TTT
SELECT * FROM debug_creds_tunnel_table
	LIMIT 1;
----
10	20	30

# Credentials can have comments (optionally)

statement ok
CREATE CREDENTIALS comment1 PROVIDER debug
	OPTIONS (table_type = 'never_ending');

statement ok
CREATE CREDENTIALS comment2 PROVIDER debug
	OPTIONS (table_type = 'never_ending')
	COMMENT 'creds-for-debug';

query TT rowsort
SELECT credentials_name, comment
	FROM glare_catalog.credentials
	WHERE credentials_name LIKE 'comment%';
----
comment1	(empty)
comment2	creds-for-debug
