# Tests for creating external databases and tables

# Table names

statement ok
CREATE EXTERNAL TABLE obj_name_table FROM debug OPTIONS ( table_type = 'never_ending' );

statement error
CREATE EXTERNAL TABLE Obj_Name_Table FROM debug OPTIONS ( table_type = 'never_ending' );

statement ok
CREATE EXTERNAL TABLE "Obj_Name_Table" FROM debug OPTIONS ( table_type = 'never_ending' );

query TTT rowsort
SELECT * FROM "Obj_Name_Table" LIMIT 1;
----
1 2 3

query TTT rowsort
SELECT * FROM Obj_Name_Table LIMIT 1;
----
1 2 3

statement error
ALTER TABLE "Obj_Name_Table" RENAME TO "obj_name_table";

statement ok
DROP TABLE Obj_Name_Table;

statement ok
ALTER TABLE "Obj_Name_Table" RENAME TO "obj_name_table";

statement error
DROP TABLE "Obj_Name_Table";

statement error
SELECT * FROM "Obj_Name_Table" LIMIT 1;

query TTT
SELECT * FROM Obj_Name_Table LIMIT 1;
----
1 2 3

statement ok
DROP TABLE "obj_name_table";

# Database names

statement ok
CREATE EXTERNAL DATABASE obj_name_database FROM debug;

statement error
CREATE EXTERNAL DATABASE Obj_Name_Database FROM debug;

statement ok
CREATE EXTERNAL DATABASE "Obj_Name_Database" FROM debug;

query TTT rowsort
SELECT * FROM "Obj_Name_Database".public.Never_Ending LIMIT 1;
----
1 2 3

query TTT rowsort
SELECT * FROM Obj_Name_Database.public.Never_Ending LIMIT 1;
----
1 2 3

statement error
ALTER DATABASE "Obj_Name_Database" RENAME TO "obj_name_database";

statement ok
DROP DATABASE Obj_Name_Database;

statement ok
ALTER DATABASE "Obj_Name_Database" RENAME TO "obj_name_database";

statement error
DROP DATABASE "Obj_Name_Database";

statement error
SELECT * FROM "Obj_Name_Database".public.Never_Ending LIMIT 1;

statement error
SELECT * FROM "Obj_Name_Database.public.Never_Ending" LIMIT 1;

query TTT
SELECT * FROM Obj_Name_Database.public.Never_Ending LIMIT 1;
----
1 2 3

statement ok
DROP DATABASE "obj_name_database";

# Tunnel names

statement ok
CREATE TUNNEL obj_name_tunnel FROM debug;

statement error
CREATE TUNNEL Obj_Name_Tunnel FROM debug;

statement ok
CREATE TUNNEL "Obj_Name_Tunnel" FROM debug;

query TT rowsort
SELECT tunnel_name FROM glare_catalog.tunnels WHERE tunnel_name LIKE '%bj_%ame_%unnel' AND tunnel_type = 'debug';
----
Obj_Name_Tunnel
obj_name_tunnel

statement ok
DROP tunnel "obj_name_tunnel";

statement error
DROP tunnel Obj_Name_tunnel;

query TT rowsort
SELECT tunnel_name FROM glare_catalog.tunnels WHERE tunnel_name LIKE '%bj_%ame_%unnel' AND tunnel_type = 'debug';
----
Obj_Name_Tunnel

statement ok
DROP tunnel "Obj_Name_Tunnel";

# Credentials names

statement ok
CREATE CREDENTIALS obj_name_credentials PROVIDER debug OPTIONS (table_type = 'never_ending');

statement error
CREATE CREDENTIALS Obj_Name_Credentials PROVIDER debug OPTIONS (table_type = 'never_ending');

statement ok
CREATE CREDENTIALS "Obj_Name_Credentials" PROVIDER debug OPTIONS (table_type = 'never_ending');

query TT rowsort
SELECT credentials_name FROM glare_catalog.credentials
	WHERE credentials_name LIKE '%bj_%ame_%redentials' AND provider = 'debug';
----
Obj_Name_Credentials
obj_name_credentials

statement ok
DROP credentials "obj_name_credentials";

statement error
DROP credentials Obj_Name_credentials;

query TT rowsort
SELECT credentials_name FROM glare_catalog.credentials
	WHERE credentials_name LIKE '%bj_%ame_%redentials' AND provider = 'debug';
----
Obj_Name_Credentials

statement ok
DROP credentials "Obj_Name_Credentials";

# View names

statement ok
CREATE VIEW obj_name_view AS VALUES (1, 2);

statement error
CREATE VIEW Obj_Name_View AS VALUES (3, 4);

statement ok
CREATE VIEW "Obj_Name_View" AS VALUES (3, 4);

query II
SELECT * FROM Obj_Name_View;
----
1 2

query II
SELECT * FROM "Obj_Name_View";
----
3 4

statement ok
DROP VIEW "obj_name_view";

statement error
DROP VIEW Obj_Name_View;

statement error
SELECT * FROM Obj_Name_View;

query II
SELECT * FROM "Obj_Name_View";
----
3 4

statement ok
DROP VIEW "Obj_Name_View";

# Schema names

statement ok
CREATE SCHEMA obj_name_schema;

statement error
CREATE SCHEMA Obj_Name_Schema;

statement ok
CREATE SCHEMA "Obj_Name_Schema";

statement ok
CREATE VIEW Obj_Name_Schema.schema_table AS VALUES (1, 2);

query II
SELECT * FROM Obj_Name_Schema.schema_table;
----
1 2

statement ok
CREATE VIEW "Obj_Name_Schema".schema_table AS VALUES (3, 4);

statement error
SELECT * FROM "Obj_Name_Schema.schema_table";

query II
SELECT * FROM "Obj_Name_Schema".schema_table;
----
3 4

statement ok
DROP SCHEMA "obj_name_schema" CASCADE;

statement error
DROP SCHEMA Obj_Name_Schema;

statement error
SELECT * FROM obj_name_schema.schema_table;

query II
SELECT * FROM "Obj_Name_Schema"."schema_table";
----
3 4

statement ok
DROP SCHEMA "Obj_Name_Schema" CASCADE;
