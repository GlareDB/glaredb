# Tests `read_csv`

# Assert options show up in catalog
query T
select parameters from glare_catalog.functions where function_name = 'read_csv';
----
[Utf8, Utf8, delimiter: Utf8, has_header: Boolean, List<Utf8>, List<Utf8>, delimiter: Utf8, has_header: Boolean]

# Absolute path
query I
select count(*) from read_csv('file://${PWD}/testdata/sqllogictests_datasources_common/data/bikeshare_stations.csv')
----
102

# Absolute path (compressed)

query I
select count(*) from read_csv('file://${PWD}/testdata/sqllogictests_datasources_common/data/bikeshare_stations.csv.gz')
----
102

# Compressed (with function argument)

query I
select count(*) from read_csv(
  'file://${PWD}/testdata/sqllogictests_datasources_common/data/bikeshare_stations.csv.gz',
  compression => 'gzip'
);
----
102

# To prove this actually picks up the compression from the argument, giving a
# wrong compression type should fail.
statement error stream/file format not recognized
select count(*) from read_csv(
  'file://${PWD}/testdata/sqllogictests_datasources_common/data/bikeshare_stations.csv.gz',
  compression => 'xz'
);

# Relative path
query I
select count(*) from read_csv('./testdata/sqllogictests_datasources_common/data/bikeshare_stations.csv')
----
102

# Remote path
query I
select count(*) from read_csv('https://raw.githubusercontent.com/GlareDB/glaredb/main/testdata/sqllogictests_datasources_common/data/bikeshare_stations.csv');
----
102

# Multiple URLs

query I
select count(*) from read_csv([
  'https://raw.githubusercontent.com/GlareDB/glaredb/main/testdata/sqllogictests_datasources_common/data/bikeshare_stations.csv',
  'https://raw.githubusercontent.com/GlareDB/glaredb/main/testdata/sqllogictests_datasources_common/data/bikeshare_stations.csv'
]);
----
204

statement error Expected at least one url.
select * from read_csv([]);

# Glob patterns not supported on HTTP

statement error Note that globbing is not supported for HTTP.
select * from read_csv(
  'https://raw.githubusercontent.com/GlareDB/glaredb/main/testdata/sqllogictests_datasources_common/data/*.csv'
);

# Alternative delimiters

query ITR rowsort
select * from read_csv('./testdata/csv/delimiter.csv', delimiter => ';');
----
1   hello, world   3.9
2   HELLO, WORLD   4.9

# Invalid delimiter (longer than one byte)
statement error delimiters for CSV must fit in one byte \(e.g. ','\)
select * from read_csv('./testdata/csv/delimiter.csv', delimiter => ';;');

# Headers

query ITTR rowsort
select * from read_csv('./testdata/csv/headerless.csv', has_header => false);
----
1   hello   world   3.9
2   HELLO   WORLD   4.9

query ITTR rowsort
select * from read_csv('./testdata/csv/headerless.csv', has_header => 'false');
----
1   hello   world   3.9
2   HELLO   WORLD   4.9

statement error Invalid parameter value hello, expected a boolean
select * from read_csv('./testdata/csv/headerless.csv', has_header => 'hello');

query I
select count(*) from read_csv('./testdata/sqllogictests_datasources_common/data/bikeshare_stations.csv', has_header => true)
----
102

